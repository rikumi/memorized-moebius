{
  "plugins": [
    "@typescript-eslint",
    "eslint-plugin-import"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
    "commonjs": true
  },
  "globals": {
    "describe": true,
    "expect": true,
    "test": true,
    "it": true
  },
  "rules": {
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "array-callback-return": "warn",
    "arrow-body-style": [
      "warn",
      "as-needed"
    ],
    "arrow-parens": [
      "warn",
      "as-needed",
      {
        "requireForBlockBody": true
      }
    ],
    "arrow-spacing": "warn",
    "block-spacing": "error",
    "brace-style": "error",
    "camelcase": [
      "error",
      {
        "ignoreDestructuring": true,
        "properties": "never"
      }
    ],
    "comma-dangle": [
      "warn",
      "always-multiline"
    ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "comma-style": [
      "error",
      "last"
    ],
    "computed-property-spacing": [
      "warn",
      "never"
    ],
    "dot-notation": "warn",
    "eol-last": [
      "error",
      "always"
    ],
    "eqeqeq": [
      "warn",
      "always"
    ],
    "func-call-spacing": [
      "error",
      "never"
    ],
    "func-style": [
      "off",
      "expression"
    ],
    "function-paren-newline": [
      "warn",
      "multiline"
    ],
    "generator-star-spacing": [
      "warn",
      {
        "before": false,
        "after": true
      }
    ],
    "id-length": "off",
    "implicit-arrow-linebreak": [
      "warn",
      "beside"
    ],
    "indent": [
      "warn",
      2,
      {
        "SwitchCase": 1,
        "VariableDeclarator": 1,
        "outerIIFEBody": 1,
        "FunctionDeclaration": {
          "parameters": 1,
          "body": 1
        },
        "FunctionExpression": {
          "parameters": 1,
          "body": 1
        },
        "CallExpression": {
          "arguments": 1
        },
        "ArrayExpression": 1,
        "ObjectExpression": 1,
        "ImportDeclaration": 1,
        "flatTernaryExpressions": false,
        "ignoredNodes": [
          "JSXElement",
          "JSXElement > *",
          "JSXAttribute",
          "JSXIdentifier",
          "JSXNamespacedName",
          "JSXMemberExpression",
          "JSXSpreadAttribute",
          "JSXExpressionContainer",
          "JSXOpeningElement",
          "JSXClosingElement",
          "JSXFragment",
          "JSXOpeningFragment",
          "JSXClosingFragment",
          "JSXText",
          "JSXEmptyExpression",
          "JSXSpreadChild"
        ],
        "ignoreComments": false
      }
    ],
    "key-spacing": "error",
    "keyword-spacing": [
      "error",
      {
        "overrides": {
          "if": {
            "after": true
          },
          "for": {
            "after": true
          },
          "while": {
            "after": true
          },
          "else": {
            "after": true
          }
        }
      }
    ],
    "linebreak-style": [
      "warn",
      "unix"
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreStrings": true,
        "ignoreUrls": true,
        "ignoreRegExpLiterals": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "new-cap": [
      "error",
      {
        "properties": false
      }
    ],
    "newline-per-chained-call": [
      "warn",
      {
        "ignoreChainWithDepth": 2
      }
    ],
    "no-array-constructor": [
      "error"
    ],
    "no-case-declarations": "error",
    "no-confusing-arrow": "warn",
    "no-const-assign": "error",
    "no-else-return": [
      "warn",
      {
        "allowElseIf": false
      }
    ],
    "no-eval": "error",
    "no-iterator": "warn",
    "no-loop-func": "error",
    "no-mixed-operators": [
      "error",
      {
        "allowSamePrecedence": true
      }
    ],
    "no-multi-assign": "error",
    "no-nested-ternary": "warn",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-wrappers": "warn",
    "no-param-reassign": [
      "warn",
      {
        "props": true
      }
    ],
    "no-plusplus": [
      "error",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "no-prototype-builtins": "error",
    "no-restricted-properties": [
      "warn",
      {
        "object": "Math",
        "property": "pow",
        "message": "Please use ** instand"
      }
    ],
    "no-restricted-syntax": [
      "warn",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "ForOfStatement",
        "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-trailing-spaces": "error",
    "no-undef": [
      "error"
    ],
    "no-underscore-dangle": "warn",
    "no-unneeded-ternary": "warn",
    "no-useless-constructor": "warn",
    "no-useless-escape": "error",
    "no-var": "error",
    "no-whitespace-before-property": "warn",
    "nonblock-statement-body-position": [
      "error",
      "beside"
    ],
    "object-curly-spacing": [
      "warn",
      "always"
    ],
    "object-shorthand": "warn",
    "one-var": [
      "warn",
      "never"
    ],
    "operator-linebreak": [
      "error",
      "before",
      {
        "overrides": {
          "=": "none"
        }
      }
    ],
    "padded-blocks": [
      "error",
      "never"
    ],
    "prefer-arrow-callback": "warn",
    "prefer-const": [
      "error",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false
      }
    ],
    "prefer-destructuring": [
      "warn",
      {
        "object": true,
        "array": true
      }
    ],
    "prefer-rest-params": "warn",
    "prefer-spread": "warn",
    "prefer-template": "error",
    "quote-props": [
      "error",
      "as-needed",
      {
        "keywords": false
      }
    ],
    "quotes": [
      "warn",
      "single",
      {
        "allowTemplateLiterals": false
      }
    ],
    "radix": "warn",
    "semi": [
      "error",
      "always"
    ],
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "space-infix-ops": "error",
    "spaced-comment": [
      "error",
      "always"
    ],
    "template-curly-spacing": [
      "error",
      "never"
    ],
    "wrap-iife": [
      "error",
      "outside"
    ],
    "import/first": "error",
    "import/no-duplicates": "error",
    "import/no-mutable-exports": "warn",
    "import/no-webpack-loader-syntax": "warn",
    "import/prefer-default-export": "warn",
    "no-dupe-class-members": "off",
    "no-empty-function": "off",
    "no-invalid-this": "off",
    "no-magic-numbers": "off",
    "no-unused-vars": "off",
    "react/sort-comp": "off",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/class-literal-property-style": [
      "error",
      "fields"
    ],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "as",
        "objectLiteralTypeAssertions": "never"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/explicit-member-accessibility": "warn",
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          "static-field",
          "public-static-method",
          "protected-static-method",
          "private-static-method",
          "static-method",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "public-field",
          "protected-field",
          "private-field",
          "instance-field",
          "field",
          "constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method",
          "public-method",
          "protected-method",
          "private-method",
          "instance-method",
          "method"
        ]
      }
    ],
    "@typescript-eslint/method-signature-style": "off",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-inferrable-types": "warn",
    "@typescript-eslint/no-namespace": [
      "error",
      {
        "allowDeclarations": true,
        "allowDefinitionFiles": true
      }
    ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": [
      "error",
      {
        "allowDestructuring": true
      }
    ],
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true,
        "allowTaggedTemplates": true
      }
    ],
    "@typescript-eslint/no-useless-constructor": "warn",
    "@typescript-eslint/prefer-for-of": "warn",
    "@typescript-eslint/prefer-function-type": "warn",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/triple-slash-reference": [
      "error",
      {
        "path": "never",
        "types": "always",
        "lib": "always"
      }
    ],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/typedef": [
      "error",
      {
        "arrayDestructuring": false,
        "arrowParameter": false,
        "memberVariableDeclaration": false,
        "objectDestructuring": false,
        "parameter": false,
        "propertyDeclaration": true,
        "variableDeclaration": false
      }
    ],
    "@typescript-eslint/unified-signatures": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxEOF": 1,
        "maxBOF": 0
      }
    ]
  }
}